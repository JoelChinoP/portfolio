---
import type { Project } from "@/types/project";

interface Props {
  project: Project;
  index: number;
}

const { project, index } = Astro.props;

// Icon mapping
const iconMap: Record<string, string> = {
  globe: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9"/></svg>`,
  palette: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM7 3H5a2 2 0 00-2 2v12a4 4 0 004 4h2"/></svg>`,
  "bar-chart": `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/></svg>`,
  smartphone: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a1 1 0 001-1V4a1 1 0 00-1-1H8a1 1 0 00-1 1v16a1 1 0 001 1z"/></svg>`,
  layers: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"/></svg>`,
  code: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/></svg>`,
};
---

<article
  class="project-card group relative bg-white/5 backdrop-blur-sm rounded-2xl overflow-hidden border border-white/10 hover:border-white/20 transition-all duration-500 hover:-translate-y-2"
  style={`--project-color: ${project.color}; animation-delay: ${index * 150}ms;`}
>
  {/* Status Badge */}
  {
    project.status == "completed" && (
      <div class="absolute top-4 right-4 z-20">
        <div class="bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-lg">
          Finalizado
        </div>
      </div>
    )
  }

  {/* Image Container */}
  <div class="relative h-64 overflow-hidden">
    <img
      src={project.image}
      alt={project.title}
      class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
      loading="lazy"
    />

    {/* Gradient Overlay */}
    <div
      class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"
    >
    </div>

    {/* Icon in bottom left */}
    <div
      class="absolute bottom-4 left-4 w-12 h-12 rounded-xl flex items-center justify-center text-white shadow-lg backdrop-blur-sm border border-white/20"
      style={`background: linear-gradient(135deg, ${project.color}40, ${project.color}80);`}
    >
      <Fragment set:html={iconMap[project.icon]} />
    </div>

    {/* Hover Links */}
    <div
      class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center gap-4"
    >
      <a
        href={project.github}
        target="_blank"
        rel="noopener noreferrer"
        class="p-3 bg-white/10 backdrop-blur-sm rounded-full hover:bg-white/20 transition-all duration-300 text-white hover:scale-110"
        aria-label={`View ${project.title} on GitHub`}
      >
        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
          <path
            d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
          ></path>
        </svg>
      </a>
      <a
        href={project.demo}
        target="_blank"
        rel="noopener noreferrer"
        class="p-3 bg-white/10 backdrop-blur-sm rounded-full hover:bg-white/20 transition-all duration-300 text-white hover:scale-110"
        aria-label={`View ${project.title} demo`}
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
          ></path>
        </svg>
      </a>
    </div>
  </div>

  {/* Content */}
  <div class="p-6">
    <div class="flex items-start justify-between mb-3">
      <h3
        class="text-xl font-bold text-white group-hover:text-transparent group-hover:bg-clip-text group-hover:bg-gradient-to-r group-hover:from-purple-400 group-hover:to-pink-400 transition-all duration-300"
      >
        {project.title}
      </h3>
    </div>

    <p
      class="text-gray-400 text-sm mb-4 line-clamp-2 group-hover:text-gray-300 transition-colors duration-300"
    >
      {project.description}
    </p>

    {/* Tags */}
    <div class="flex flex-wrap gap-2 mb-4">
      {
        project.tags.slice(0, 3).map((tag, i) => (
          <span
            class="px-3 py-1 text-xs font-medium rounded-full bg-white/10 text-white/80 border border-white/20 hover:border-white/40 transition-all duration-300"
            style={`animation-delay: ${index * 150 + i * 100}ms;`}
          >
            {tag}
          </span>
        ))
      }
      {
        project.tags.length > 3 && (
          <span class="px-3 py-1 text-xs font-medium rounded-full bg-white/5 text-white/60 border border-white/10">
            +{project.tags.length - 3}
          </span>
        )
      }
    </div>

    {/* Progress bar */}
    <div class="w-full bg-white/10 rounded-full h-1 overflow-hidden">
      <div
        class="h-full rounded-full transition-all duration-700 group-hover:w-full opacity-60 group-hover:opacity-100"
        style={`background: linear-gradient(90deg, ${project.color}, ${project.color}80); width: 0%;`}
      >
      </div>
    </div>
  </div>
</article>

<style>
  .project-card {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out forwards;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .project-card:hover .h-full {
    width: 100% !important;
  }
</style>
