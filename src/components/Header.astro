---
// Archivo Astro: Navbar.astro
const navigation = [
  { name: "Inicio", href: "#home" },
  { name: "Información", href: "#bento" },
  { name: "Sobre mí", href: "#about" },
  { name: "Habilidades", href: "#skills" },
  { name: "Proyectos", href: "#projects" },
];
---

<header
  class="fixed z-50 top-0 left-0 w-full bg-blue-500/10 backdrop-blur-xl md:backdrop-blur-sm"
>
  <div
    class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-2 pb-4 2xl:pt-3 2xl:pb-5 flex items-center justify-between"
  >
    <!-- Logo -->
    <div
      class="text-2xl md:text-2xl font-bold text-cyan-400 tracking-wide flex"
    >
      <span class="text-white">&lt; </span>
      <span class="text-cyan-700">Dev</span>
      <span class="text-white">/&gt;</span>
    </div>

    <!-- Desktop nav -->
    <nav class="hidden md:flex space-x-8 font-semibold" id="desktop-nav">
      {
        navigation.map((item, idx) => (
          <a
            href={item.href}
            class="nav-link text-cyan-200 transition-colors duration-300 hover:text-blue-500 relative"
            data-index={idx}
          >
            {item.name}
          </a>
        ))
      }
    </nav>

    <!-- Mobile menu button -->
    <button
      id="menu-toggle"
      class="md:hidden text-cyan-200 hover:text-blue-600 focus:outline-none"
      aria-label="Toggle menu"
    >
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        viewBox="0 0 24 24"
      >
        <path
          id="menu-icon"
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>
  </div>

  <!-- Mobile nav panel -->
  <div
    id="mobile-menu"
    class="hidden md:hidden px-4 py-2 space-y-2 text-center backdrop-blur-xl"
  >
    {
      navigation.map((item, idx) => (
        <a
          href={item.href}
          class="nav-link block text-cyan-200 font-semibold hover:text-blue-500 transition-colors duration-300"
          data-index={idx}
        >
          {item.name}
        </a>
      ))
    }
  </div>

  <script is:inline>
    // Mobile menu toggle
    const toggleBtn = document.getElementById("menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");
    const icon = document.getElementById("menu-icon");
    let open = false;

    toggleBtn?.addEventListener("click", () => {
      open = !open;
      mobileMenu.classList.toggle("hidden", !open);
      icon.setAttribute(
        "d",
        open ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"
      );
    });

    // Close mobile menu on link click
    mobileMenu?.querySelectorAll("a").forEach((link) =>
      link.addEventListener("click", () => {
        open = false;
        mobileMenu.classList.add("hidden");
        icon.setAttribute("d", "M4 6h16M4 12h16M4 18h16");
      })
    );

    // Active nav effect
    const navLinks = document.querySelectorAll(".nav-link");
    let activeIdx = null;

    function setActive(idx) {
      navLinks.forEach((link, i) => {
        if (i === idx) {
          link.classList.add(
            "text-blue-400",
            'after:content-[""]',
            "after:absolute",
            "after:left-0",
            "after:-bottom-1",
            "after:w-full",
            "after:h-0.5",
            "after:bg-blue-400",
            "after:rounded"
          );
        } else {
          link.classList.remove(
            "text-blue-400",
            'after:content-[""]',
            "after:absolute",
            "after:left-0",
            "after:-bottom-1",
            "after:w-full",
            "after:h-0.5",
            "after:bg-blue-400",
            "after:rounded"
          );
        }
      });
      activeIdx = idx;
    }

    // On click, set active and disable scroll listener until scroll
    let ignoreScroll = false;
    navLinks.forEach((link, idx) => {
      link.addEventListener("click", (e) => {
        setActive(idx);
        ignoreScroll = true;
        setTimeout(() => {
          ignoreScroll = false;
        }, 1000); // 1s to allow scroll to finish
      });
    });

    // On scroll, update active nav if not recently clicked
    const sectionIds = Array.from(navLinks).map((link) =>
      link.getAttribute("href")
    );
    const sections = sectionIds.map((id) => document.querySelector(id));
    function onScroll() {
      if (ignoreScroll) return;
      let found = false;
      for (let i = sections.length - 1; i >= 0; i--) {
        const sec = sections[i];
        if (sec && window.scrollY + 80 >= sec.offsetTop) {
          setActive(i);
          found = true;
          break;
        }
      }
      if (!found) setActive(null);
    }
    window.addEventListener("scroll", onScroll, { passive: true });

    // Set initial active
    onScroll();
  </script>
  <style>
    .nav-link.active,
    .nav-link.text-blue-400 {
      color: #38bdf8 !important;
    }
    .nav-link.active::after,
    .nav-link.text-blue-400::after {
      content: "";
      position: absolute;
      left: 0;
      bottom: -0.15rem;
      width: 100%;
      height: 2px;
      background: #38bdf8;
      border-radius: 2px;
    }
  </style>
</header>
