---
import Section from "./ui/Section.astro";
import Github from "lucide-static/icons/github.svg";
import Linkedin from "lucide-static/icons/linkedin.svg";
import Phone from "lucide-static/icons/phone-call.svg";
import Mail from "lucide-static/icons/mail.svg";
import CodeIlustration from "@/assets/coding-ilu.svg";

const socialLinks = [
  {
    url: "https://www.linkedin.com/in/joel-antonio-chino-pari-6184a22b4",
    icon: Linkedin,
    label: "LinkedIn",
  },
  {
    url: "https://github.com/JoelChinoP",
    icon: Github,
    label: "GitHub",
  },
  {
    url: "mailto:joel15acp@gmail.com",
    icon: Mail,
    label: "Correo",
  },
  {
    url: "https://wa.me/51947057253?text=Hola,%20Joel",
    icon: Phone,
    label: "WhatsApp",
  },
];
---

<Section
  id="home"
  class="relative overflow-hidden min-h-[100dvh] flex items-center justify-center bg-black"
>
  <!-- Fondo de burbujas doradas animadas -->
  <div id="bubble-bg" class="absolute inset-0 z-0 pointer-events-none"></div>

  <!-- Contenido principal -->
  <div
    class="relative z-10 flex flex-col md:flex-row items-center justify-between w-full max-w-6xl mx-auto px-4 py-16 gap-12"
  >
    <!-- Texto principal -->
    <div class="flex-1 flex flex-col items-start">
      <h1
        class="text-4xl sm:text-5xl md:text-6xl font-extrabold leading-tight mb-4 bg-gradient-to-r from-yellow-400 via-yellow-300 to-yellow-500 bg-clip-text text-transparent animate-fade-in-up"
      >
        ¡Hola! Soy <span class="text-yellow-400 drop-shadow-lg">Joel</span>
      </h1>
      <h2
        class="text-xl sm:text-2xl md:text-3xl font-semibold mb-6 text-gray-200 animate-fade-in-up delay-150"
      >
        <span id="text-animate" class="text-yellow-300"></span>
      </h2>
      <p
        class="text-base sm:text-lg md:text-xl text-gray-300 mb-8 max-w-xl animate-fade-in-up delay-300"
      >
        Apasionado por la programación y el desarrollo de software, disfruto
        creando soluciones innovadoras y eficientes. Me encanta el backend, la
        arquitectura limpia y los retos tecnológicos. ¡Bienvenido a mi
        portafolio!
      </p>
      <div class="flex gap-4 animate-fade-in-up delay-500">
        {
          socialLinks.map((link) => (
            <a
              href={link.url}
              target="_blank"
              rel="noopener noreferrer"
              aria-label={link.label}
              class="group flex justify-center items-center w-12 h-12 bg-yellow-500/10 border border-yellow-400 rounded-full shadow-lg transition-all duration-300 hover:bg-yellow-400 hover:text-black hover:scale-110 focus:outline-none focus:ring-2 focus:ring-yellow-400"
            >
              <div class="w-6 h-6">
                <link.icon class="w-full h-full" />
              </div>
            </a>
          ))
        }
      </div>
    </div>

    <!-- Ilustración animada -->
    <div
      class="flex-1 flex justify-center items-center relative animate-fade-in-up delay-700"
    >
      <div
        class="relative w-64 h-64 sm:w-96 sm:h-96 rounded-full bg-gradient-to-tr from-yellow-500/30 via-yellow-400/10 to-yellow-500/20 shadow-2xl flex items-center justify-center overflow-hidden border-4 border-yellow-400/60"
      >
        <img
          src={CodeIlustration.src}
          alt="Ilustración de programación"
          class="w-56 h-56 sm:w-80 sm:h-80 object-contain drop-shadow-xl animate-float"
        />
        <span
          class="absolute -inset-2 rounded-full border-4 border-yellow-400/30 animate-pulse"
        ></span>
      </div>
    </div>
  </div>

  <style>
    /* Animaciones personalizadas */
    @keyframes fade-in-up {
      0% {
        opacity: 0;
        transform: translateY(40px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
    .animate-fade-in-up {
      animation: fade-in-up 1s cubic-bezier(0.4, 0, 0.2, 1) both;
    }
    .delay-150 {
      animation-delay: 0.15s;
    }
    .delay-300 {
      animation-delay: 0.3s;
    }
    .delay-500 {
      animation-delay: 0.5s;
    }
    .delay-700 {
      animation-delay: 0.7s;
    }
    @keyframes float {
      0%,
      100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-20px);
      }
    }
    .animate-float {
      animation: float 3s ease-in-out infinite;
    }
    /* Fondo de burbujas doradas */
    #bubble-bg {
      background: transparent;
    }
    #bubble-bg .bubble {
      position: absolute;
      border-radius: 9999px;
      background: linear-gradient(135deg, #ffd700 60%, #fffbe6 100%);
      opacity: 0.7;
      pointer-events: none;
      animation: bubble-move 12s linear infinite;
    }
    @keyframes bubble-move {
      0% {
        transform: translateY(100vh) scale(0.7);
      }
      100% {
        transform: translateY(-10vh) scale(1.2);
      }
    }
  </style>

  <script>
    // Animación de texto
    function setupTextAnimation() {
      const textElement = document.getElementById("text-animate");
      if (!textElement) return;

      const text = "Desarrollador de Software | Backend & Más";
      let charIndex = 0;
      let isTyping = true;

      function typeText() {
        if (isTyping) {
          if (charIndex < text.length) {
            textElement.textContent += text.charAt(charIndex);
            charIndex++;
            setTimeout(typeText, 70);
          } else {
            isTyping = false;
            setTimeout(typeText, 1800);
          }
        } else {
          if (charIndex > 0) {
            textElement.textContent = text.substring(0, charIndex - 1);
            charIndex--;
            setTimeout(typeText, 30);
          } else {
            isTyping = true;
            setTimeout(typeText, 800);
          }
        }
      }
      setTimeout(typeText, 800);
    }

    // Burbujas doradas animadas
    function createBubbles() {
      const container = document.getElementById("bubble-bg");
      if (!container) return;
      const bubbleCount = window.innerWidth < 640 ? 12 : 24;
      for (let i = 0; i < bubbleCount; i++) {
        const bubble = document.createElement("div");
        bubble.className = "bubble";
        const size = Math.random() * 32 + 16;
        bubble.style.width = `${size}px`;
        bubble.style.height = `${size}px`;
        bubble.style.left = `${Math.random() * 100}%`;
        bubble.style.bottom = `-${Math.random() * 20 + 10}px`;
        bubble.style.animationDuration = `${8 + Math.random() * 8}s`;
        bubble.style.opacity = `${0.5 + Math.random() * 0.4}`;
        container.appendChild(bubble);
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      setupTextAnimation();
      createBubbles();
    });
  </script>
</Section>
